generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Item {
  id       BigInt  @id @default(autoincrement())
  sku      String  @unique
  name     String
  unit     String
  minQty   Decimal @default(0)
  isActive Boolean @default(true)

  batches    Batch[]
  movements  StockMove[]
  thresholds Threshold[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Location {
  id   BigInt @id @default(autoincrement())
  name String @unique
  kind String // WAREHOUSE | ROOM | STERILE | etc.

  // named back-relations for dual links from StockMove
  asFromFor StockMove[] @relation("FromLoc")
  asToFor   StockMove[] @relation("ToLoc")

  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  Threshold Threshold[]
}

model Batch {
  id         BigInt    @id @default(autoincrement())
  itemId     BigInt
  lotNo      String?
  expiryDate DateTime?
  qtyOnHand  Decimal   @default(0)

  item Item @relation(fields: [itemId], references: [id], onDelete: Cascade)

  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  StockMove StockMove[]

  @@index([itemId, expiryDate])
}

model StockMove {
  id         BigInt   @id @default(autoincrement())
  itemId     BigInt
  batchId    BigInt?
  fromLocId  BigInt?
  toLocId    BigInt?
  qty        Decimal
  reason     String // IN | OUT | ADJUSTMENT | DAMAGED | EXPIRED | RECEIPT | ISSUE
  refType    String? // 'PO' | 'RECEIPT' | 'DELIVERY' | 'TRANSFER' | ...
  refId      BigInt?
  eventId    String? // idempotency key
  occurredAt DateTime @default(now())
  createdAt  DateTime @default(now())

  item    Item      @relation(fields: [itemId], references: [id], onDelete: Restrict)
  batch   Batch?    @relation(fields: [batchId], references: [id], onDelete: SetNull)
  fromLoc Location? @relation("FromLoc", fields: [fromLocId], references: [id], onDelete: SetNull)
  toLoc   Location? @relation("ToLoc", fields: [toLocId], references: [id], onDelete: SetNull)

  @@index([itemId, occurredAt])
  @@index([refType, refId])
}

model Threshold {
  id         BigInt  @id @default(autoincrement())
  itemId     BigInt
  locationId BigInt
  minQty     Decimal @default(0)

  item     Item     @relation(fields: [itemId], references: [id], onDelete: Cascade)
  location Location @relation(fields: [locationId], references: [id], onDelete: Cascade)

  @@unique([itemId, locationId])
}
