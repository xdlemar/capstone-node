name: Deploy to Server

on:
  workflow_run:
    workflows: ["ci"]
    types: [completed]

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout (metadata only)
        uses: actions/checkout@v4

      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host:     ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key:      ${{ secrets.SSH_KEY }}
          port:     2298
          script_stop: true
          script: |
            set -euo pipefail

            # ---- config paths ----
            APP_DIR="${{ secrets.SERVER_PATH }}"     # e.g. /home/log1.health-ease-hospital.com
            REPO_URL="https://github.com/xdlemar/capstone-node.git"

            echo "=> Ensuring target dir exists: $APP_DIR"
            mkdir -p "$APP_DIR"

            echo "=> Clone or pull repo"
            if [ -d "$APP_DIR/.git" ]; then
              git -C "$APP_DIR" fetch --all
              git -C "$APP_DIR" reset --hard origin/main
            else
              rm -rf "$APP_DIR/*" || true
              git clone "$REPO_URL" "$APP_DIR"
            fi

            echo "=> Show Node & npm"
            node -v
            npm -v

            echo "=> Install dependencies inside repo"
            cd "$APP_DIR"
            npm ci

            echo "=> Run migrations with Prisma (via npx)"
            DATABASE_URL="${{ secrets.INVENTORY_DB_URL }}" \
              npx prisma migrate deploy --schema=inventory-svc/prisma/schema.prisma

            DATABASE_URL="${{ secrets.PROCUREMENT_DB_URL }}" \
              npx prisma migrate deploy --schema=procurement-svc/prisma/schema.prisma

            DATABASE_URL="${{ secrets.AUTH_DB_URL }}" \
              npx prisma migrate deploy --schema=auth-svc/prisma/schema.prisma

            echo "=> Start / Reload services with PM2 (if installed)"
            if command -v pm2 >/dev/null 2>&1; then
              pm2 startOrReload ecosystem.config.js --update-env || true
              pm2 save || true
              pm2 status || true
            else
              echo "PM2 not found. Install it with: npm i -g pm2"
            fi

            echo "âœ… Deploy script finished."
