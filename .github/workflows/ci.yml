name: validate

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  validate:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: ${{ secrets.DB_PASS }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DB_USER: postgres
      DB_PASS_URL: ${{ secrets.DB_PASS }}
      DB_HOST: localhost
      DB_PORT: 5432

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install

      - name: Create logical databases
        run: |
          psql postgresql://$DB_USER:$DB_PASS_URL@$DB_HOST:$DB_PORT/postgres <<EOF
          CREATE DATABASE inventory_db;
          CREATE DATABASE procurement_db;
          CREATE DATABASE auth_db;
          CREATE DATABASE plt_db;
          CREATE DATABASE dtrs_db;
          CREATE DATABASE alms_db;
          EOF

      - name: Apply database migrations
        run: |
          set -euo pipefail
          declare -A SCHEMAS=(
            [inventory]=inventory-svc/prisma/schema.prisma
            [procurement]=procurement-svc/prisma/schema.prisma
            [auth]=auth-svc/prisma/schema.prisma
            [plt]=plt-svc/prisma/schema.prisma
            [dtrs]=dtrs-svc/prisma/schema.prisma
            [alms]=alms-svc/prisma/schema.prisma
          )
          for svc in "${!SCHEMAS[@]}"; do
            export DATABASE_URL="postgresql://${DB_USER}:${DB_PASS_URL}@${DB_HOST}:${DB_PORT}/${svc}_db?schema=public"
            echo "Running migrations for $svc"
            npx prisma migrate deploy --schema="${SCHEMAS[$svc]}"
          done

      - name: Start service stack
        run: |
          nohup npm run dev:all > server.log 2>&1 &
          echo $! > stack.pid
          sleep 10

      - name: Seed reference data
        run: npm run db:seed

      - name: Run tests
        run: npm test

      - name: Smoke endpoints
        run: curl -f http://localhost:8080/health

      - name: Stop service stack
        if: always()
        run: |
          if [ -f stack.pid ]; then
            kill -9 $(cat stack.pid) || true
            rm stack.pid
          fi
